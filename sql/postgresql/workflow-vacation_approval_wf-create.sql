
/*
 * Business Process Definition: Vacation Approval (vacation_approval_wf)
 *
 * Auto-generated by ACS Workflow Export, version 4.3
 *
 * Context: default
 */


/*
 * Cases table
 */
create table vacation_approval_wf_cases (
  case_id               integer primary key
                        references wf_cases on delete cascade
);

/* 
 * Declare the object type
 */


create function inline_0 () returns integer as '
begin
    PERFORM workflow__create_workflow (
        ''vacation_approval_wf'', 
        ''Vacation Approval'', 
        ''Vacation Approval'', 
        ''Approval workflow for vacations.
The "approval" transition is assigned to the project manager of the user.'', 
        ''vacation_approval_wf_cases'',
        ''case_id''
    );

    return null;

end;' language 'plpgsql';

select inline_0 ();
drop function inline_0 ();

        


/*****
 * Places
 *****/


    select workflow__add_place(
        'vacation_approval_wf',
        'start', 
        'Ready to Enter', 
        1
    );

        

    select workflow__add_place(
        'vacation_approval_wf',
        'before_review', 
        'Ready to Review', 
        100
    );

        

    select workflow__add_place(
        'vacation_approval_wf',
        'before_approved', 
        'Ready to Approved', 
        null
    );

        

    select workflow__add_place(
        'vacation_approval_wf',
        'before_deleted', 
        'Ready to Deleted', 
        null
    );

        

    select workflow__add_place(
        'vacation_approval_wf',
        'end', 
        'Process finished', 
        null
    );

        
/*****
 * Roles
 *****/



	select workflow__add_role (
         'vacation_approval_wf',
         'approved',
         'Approved',
         3
    );

        

	select workflow__add_role (
         'vacation_approval_wf',
         'deleted',
         'Deleted',
         4
    );

        

	select workflow__add_role (
         'vacation_approval_wf',
         'approve',
         'Approve',
         2
    );

        

	select workflow__add_role (
         'vacation_approval_wf',
         'modify',
         'Modify',
         1
    );

        

/*****
 * Transitions
 *****/



	select workflow__add_transition (
         'vacation_approval_wf',
         'modify',
         'Modify',
         'modify',
         1,
         'user'
	);
	
        

	select workflow__add_transition (
         'vacation_approval_wf',
         'approve',
         'Approve',
         'approve',
         2,
         'user'
	);
	
        

	select workflow__add_transition (
         'vacation_approval_wf',
         'approved',
         'Approved',
         'approved',
         3,
         'automatic'
	);
	
        

	select workflow__add_transition (
         'vacation_approval_wf',
         'deleted',
         'Deleted',
         'deleted',
         4,
         'automatic'
	);
	
        

/*****
 * Arcs
 *****/



	select workflow__add_arc (
         'vacation_approval_wf',
         'approve',
         'start',
         'out',
         '#',
         '',
         'Rejected'
	);

        

	select workflow__add_arc (
         'vacation_approval_wf',
         'approve',
         'before_review',
         'in',
         '',
         '',
         ''
	);

        

	select workflow__add_arc (
         'vacation_approval_wf',
         'approve',
         'before_approved',
         'out',
         'wf_callback__guard_attribute_true',
         'review_reject_p',
         'Approved'
	);

        

	select workflow__add_arc (
         'vacation_approval_wf',
         'approved',
         'end',
         'out',
         '',
         '',
         ''
	);

        

	select workflow__add_arc (
         'vacation_approval_wf',
         'approved',
         'before_approved',
         'in',
         '',
         '',
         ''
	);

        

	select workflow__add_arc (
         'vacation_approval_wf',
         'deleted',
         'end',
         'out',
         '',
         '',
         ''
	);

        

	select workflow__add_arc (
         'vacation_approval_wf',
         'deleted',
         'before_deleted',
         'in',
         '',
         '',
         ''
	);

        

	select workflow__add_arc (
         'vacation_approval_wf',
         'modify',
         'start',
         'in',
         '',
         '',
         ''
	);

        

	select workflow__add_arc (
         'vacation_approval_wf',
         'modify',
         'before_review',
         'out',
         '',
         '',
         ''
	);

        

/*****
 * Attributes
 *****/



    select workflow__create_attribute(
        'vacation_approval_wf',
        'review_reject_p',
        'boolean',
        'Approve the Absence?',
	null,
	null,
	null,
        't',
	1,
	1,
	null,
	'generic'
    );

        

	select workflow__add_trans_attribute_map(
        	'vacation_approval_wf', 
        	'approve',
        	'review_reject_p',
        	1
    );

        
/*****
 * Transition-role-assignment-map
 *****/



/*
 * Context/Transition info
 * (for context = default)
 */

insert into wf_context_transition_info
(context_key,
 workflow_key,
 transition_key,
 estimated_minutes,
 instructions,
 enable_callback,
 enable_custom_arg,
 fire_callback,
 fire_custom_arg,
 time_callback,
 time_custom_arg,
 deadline_callback,
 deadline_custom_arg,
 deadline_attribute_name,
 hold_timeout_callback,
 hold_timeout_custom_arg,
 notification_callback,
 notification_custom_arg,
 unassigned_callback,
 unassigned_custom_arg)
values
('default',
 'vacation_approval_wf',
 'approved',
 0,
 '',
 '',
 '',
 'im_workflow__set_object_status_id',
 '16000',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '');

insert into wf_context_transition_info
(context_key,
 workflow_key,
 transition_key,
 estimated_minutes,
 instructions,
 enable_callback,
 enable_custom_arg,
 fire_callback,
 fire_custom_arg,
 time_callback,
 time_custom_arg,
 deadline_callback,
 deadline_custom_arg,
 deadline_attribute_name,
 hold_timeout_callback,
 hold_timeout_custom_arg,
 notification_callback,
 notification_custom_arg,
 unassigned_callback,
 unassigned_custom_arg)
values
('default',
 'vacation_approval_wf',
 'deleted',
 0,
 '',
 '',
 '',
 'im_workflow__set_object_status_id',
 '16002',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '');

insert into wf_context_transition_info
(context_key,
 workflow_key,
 transition_key,
 estimated_minutes,
 instructions,
 enable_callback,
 enable_custom_arg,
 fire_callback,
 fire_custom_arg,
 time_callback,
 time_custom_arg,
 deadline_callback,
 deadline_custom_arg,
 deadline_attribute_name,
 hold_timeout_callback,
 hold_timeout_custom_arg,
 notification_callback,
 notification_custom_arg,
 unassigned_callback,
 unassigned_custom_arg)
values
('default',
 'vacation_approval_wf',
 'modify',
 5,
 '',
 'im_workflow__set_object_status_id',
 '16006',
 'im_workflow__set_object_status_id',
 '16004',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 'im_workflow__assign_to_owner',
 '');

insert into wf_context_transition_info
(context_key,
 workflow_key,
 transition_key,
 estimated_minutes,
 instructions,
 enable_callback,
 enable_custom_arg,
 fire_callback,
 fire_custom_arg,
 time_callback,
 time_custom_arg,
 deadline_callback,
 deadline_custom_arg,
 deadline_attribute_name,
 hold_timeout_callback,
 hold_timeout_custom_arg,
 notification_callback,
 notification_custom_arg,
 unassigned_callback,
 unassigned_custom_arg)
values
('default',
 'vacation_approval_wf',
 'approve',
 5,
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 '',
 'im_workflow__assign_to_supervisor',
 '');



/*
 * Context/Role info
 * (for context = default)
 */



/*
 * Context Task Panels
 * (for context = default)
 */

insert into wf_context_task_panels 
(context_key,
 workflow_key,
 transition_key,
 sort_order,
 header,
 template_url,
 overrides_action_p,
 overrides_both_panels_p,
 only_display_when_started_p)
values
('default',
 'vacation_approval_wf',
 'approve',
 1,
 'Approve Absence',
 '/packages/intranet-timesheet2-workflow/www/absences/absence-panel',
 'f',
 'f',
 'f');

insert into wf_context_task_panels 
(context_key,
 workflow_key,
 transition_key,
 sort_order,
 header,
 template_url,
 overrides_action_p,
 overrides_both_panels_p,
 only_display_when_started_p)
values
('default',
 'vacation_approval_wf',
 'modify',
 1,
 'Modify Absence',
 '/packages/intranet-timesheet2-workflow/www/absences/absence-panel',
 'f',
 'f',
 'f');


commit;

-- Unassigned callback that assigns the transition to the supervisor of the owner
-- of the underlying absence
--
create or replace function im_workflow__assign_to_absence_supervisor (integer, text)
returns integer as '
declare
	p_task_id		alias for $1;
	p_custom_arg		alias for $2;
	v_case_id		integer;	v_object_id		integer;
	v_creation_user		integer;	v_creation_ip		varchar;
	v_journal_id		integer;	v_object_type		varchar;
	v_owner_id		integer;	v_owner_name		varchar;
	v_supervisor_id		integer;	v_supervisor_name	varchar;
	v_transition_key	varchar;
	v_str			text;
	row			RECORD;
begin
	-- Get information about the transition and the "environment"
	select	tr.transition_key, t.case_id, c.object_id, ua.owner_id, o.creation_ip, o.object_type
	into	v_transition_key, v_case_id, v_object_id, v_owner_id, v_creation_ip, v_object_type
	from	wf_tasks t, wf_cases c, wf_transitions tr, im_user_absences ua, acs_objects o
	where	t.task_id = p_task_id
		and t.case_id = c.case_id
		and o.object_id = t.object_id
        and ua.absence_id = o.object_id
		and t.workflow_key = tr.workflow_key
		and t.transition_key = tr.transition_key;

	select	im_name_from_user_id(e.employee_id), 
		e.supervisor_id, im_name_from_user_id(e.supervisor_id)
	into  v_owner_name, 
		v_supervisor_id, v_supervisor_name
	from	im_employees e
	where	e.employee_id = v_owner_id;

	IF v_supervisor_id is not null THEN
		v_journal_id := journal_entry__new(
		    null, v_case_id,
		    v_transition_key || '' assign_to_supervisor '' || v_supervisor_name,
		    v_transition_key || '' assign_to_supervisor '' || v_supervisor_name,
		    now(), v_creation_user, v_creation_ip,
		    ''Assigning to '' || v_supervisor_name || '', the supervisor of '' || v_owner_name || ''.''
		);
		PERFORM workflow_case__add_task_assignment(p_task_id, v_supervisor_id, ''f'');
		PERFORM workflow_case__notify_assignee (p_task_id, v_supervisor_id, null, null, 
			''wf_'' || v_object_type || ''_assignment_notif'');
	END IF;
	return 0;
end;' language 'plpgsql';